{"version":3,"sources":["img/logo.png","components/ui/header/HeaderElements.js","components/ui/header/index.js","components/characters/CharacterElements.js","components/characters/character-item/index.js","components/characters/character-grid/CharacterGridElements.js","components/characters/character-grid/index.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderContainer","styled","header","HeaderImage","img","Header","src","logo","alt","Card","div","CardImage","CharacterItem","item","CardGrid","CharacterGrid","items","map","App","useState","setItems","useEffect","a","axios","result","console","log","data","fetchItems","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAAe,G,MAAA,IAA0B,kC,cCE5BA,EAAkBC,IAAOC,OAAV,gDAIfC,EAAcF,IAAOG,IAAV,+C,OCSTC,EARA,WACX,OACI,cAACL,EAAD,UACI,cAACG,EAAD,CAAaG,IAAKC,EAAMC,IAAI,yBCR3BC,EAAOR,IAAOS,IAAV,oIAOJC,EAAYV,IAAOG,IAAV,0FCEPQ,EARO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACI,cAACJ,EAAD,UACI,cAACE,EAAD,CAAWL,IAAKO,EAAKT,IAAKI,IAAI,QCJ7BM,EAAWb,IAAOS,IAAV,4JCYNK,EAVO,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACpB,OACI,cAACF,EAAD,UACKE,EAAMC,KAAI,SAAAJ,GAAI,OACX,cAAC,EAAD,CAAeA,KAAMA,UCsBtBK,MAvBf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNH,EADM,KACCI,EADD,KAcb,OAXAC,qBAAU,YAEQ,uCAAG,4BAAAC,EAAA,sEACIC,IACnB,iDAFe,OACXC,EADW,OAIjBC,QAAQC,IAAIF,EAAOG,MACnBP,EAASI,EAAOG,MALC,2CAAH,qDAOhBC,KACC,IAED,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAeb,MAAOA,IACtB,kDCbSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.78b362fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e6ecab44.png\";","import styled from \"styled-components\";\n\nexport const HeaderContainer = styled.header`\n    height: 200px;\n`\n\nexport const HeaderImage = styled.img`\n    width: 200px;\n`","import React from 'react'\nimport logo from '../../../img/logo.png'\nimport { \n    HeaderContainer, \n    HeaderImage } \nfrom './HeaderElements'\n\nconst Header = () => {\n    return (\n        <HeaderContainer>\n            <HeaderImage src={logo} alt='breaking-bad logo' />\n        </HeaderContainer>\n    )\n}\n\nexport default Header\n","import styled from \"styled-components\";\n\nexport const Card = styled.div`\n    cursor: pointer;\n    background-color: transparent;\n    height: 300px;\n    perspective: 1000px;\n`\n\nexport const CardImage = styled.img`\n    width: 100%;\n    height: 300px;\n    object-fit: cover;\n`","import React from 'react'\nimport { Card, CardImage } from '../CharacterElements'\n\nconst CharacterItem = ({ item }) => {\n    return (\n        <Card>\n            <CardImage src={item.img} alt=''/>\n        </Card>\n    )\n}\n\nexport default CharacterItem\n","import styled from \"styled-components\";\n\nexport const CardGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(18rem, 1fr));\n    gap: 1rem;\n    padding-bottom: 3em;\n`","import React from 'react'\nimport CharacterItem from '../character-item'\nimport { CardGrid } from './CharacterGridElements'\n\nconst CharacterGrid = ({items}) => {\n    return (\n        <CardGrid>\n            {items.map(item => (\n                <CharacterItem item={item}></CharacterItem>\n            ))}\n        </CardGrid>\n    )\n}\n\nexport default CharacterGrid\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport './App.css';\nimport Header from './components/ui/header';\nimport CharacterGrid from './components/characters/character-grid';\n\n\nfunction App() {\n  const [items, setItems] = useState([])\n\n  useEffect(() => {\n    // fetch items from API with async await and axios\n    const fetchItems = async () => {\n      const result = await axios(\n        'https://www.breakingbadapi.com/api/characters'\n      )\n      console.log(result.data)\n      setItems(result.data)\n    }\n    fetchItems()\n  }, [])\n  return (\n    <div className=\"App\">\n      <Header />\n      <CharacterGrid items={items}/>\n      <h1>Breaking Bad</h1>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}